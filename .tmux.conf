unbind C-b
set -g prefix C-a
bind C-a send-prefix

set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

set -g escape-time 0

# windows and panes start at 1
set -g base-index 1
set -g pane-base-index 1

# renumber when a window is closed
set -g renumber-windows on

set -g xterm-keys on

set -g mouse off
#set -g mouse-select-pane on

set -gw mode-keys vi

set -gw aggressive-resize on

# reload this
unbind r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded"

# ---------------------------------------------------------
# status
# ---------------------------------------------------------

# transparent background
set -g status-bg default
set -g status-fg default

set -g window-status-format ' #[fg=colour250]#I #W '
set -g window-status-current-bg red
set -g window-status-current-format ' #[fg=colour255]#I #W '
set -g status-right "ğŸŒ¡ #(acpi -t | awk '{ print $4\" ÂºC\" }') | %a %d %b âŒš %H:%M"

set -g set-titles off

set -g message-fg colour231
set -g message-bg '#C792EA'
set -g message-bg '#bb80b3'
set -g message-bg '#5f00af'
set -g message-attr bright

# ---------------------------------------------------------
# splits
# ---------------------------------------------------------

# move to the current path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
unbind '"'
unbind %

# ---------------------------------------------------------
# panes
# ---------------------------------------------------------
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
